version: '3.8'
services:
  backend:
    build:
      context: ./backend/app
      dockerfile: Dockerfile
    env_file:
      - .env.test
    volumes:
      - ./backend/app:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - elasticsearch

  frontend:
    build: ./frontend
    env_file:
      - .env.test
    ports:
      - "3000:3000"
    depends_on:
      - backend

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: pastai_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata_test:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"

  kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  zookeeper:
    image: zookeeper:3.7
    ports:
      - "2181:2181"

  journal-consumer:
    build:
      context: ./backend/app
      dockerfile: Dockerfile
    command: ["/bin/sh", "-c", "chmod +x events/consumers/start_journal_consumer.sh && ./events/consumers/start_journal_consumer.sh"]
    env_file:
      - .env.test
    depends_on:
      - kafka
    restart: always

volumes:
  pgdata_test:
